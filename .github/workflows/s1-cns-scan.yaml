name: SentinelOne CNS Scan

on:
  # Triggers the workflow when pull_request created on master/main branch
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches: [ master, main ]
  workflow_dispatch: {}

jobs:
  secret-scanning:
    runs-on: ubuntu-latest
    container:
      image: pingsafe/s1cnscli:latest
      options: --entrypoint ""

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Configure SentinelOne CNS CLI
        run: s1-cns-cli config --api-token $TOKEN --endpoint-url https://cns.na1.sentinelone.net
        env:
         TOKEN: ${{secrets.SENTINELONE_CNS_TOKEN}}

      - name: Configure git config
        run: git config --global --add safe.directory $PWD

      - name: Run Secret Detector
        id: secret-detector
        continue-on-error: true
        run:  s1-cns-cli --output-format SARIF --output-file secret.sarif scan secret -d $PWD --pull-request origin/$SRC $DEST --publish-result --repo-full-name $REPO_FULL_NAME  --repo-url $REPO_URL/$REPO_FULL_NAME
        env:
          DEST: ${{ github.event.pull_request.base.sha }}
          SRC: ${{ github.event.pull_request.head.ref }}
          REPO_FULL_NAME: ${{ github.repository }}
          REPO_URL: ${{ github.server_url }}

      - name: Publish Results as SARIF
        if: steps.secret-detector.outcome == 'failure'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: secret.sarif
      
      - name: Fail in case of Scan detecting issues
        if: steps.secret-detector.outcome == 'failure'
        run: exit 1

  iac-scanning:
    runs-on: ubuntu-latest
    container:
      image: pingsafe/s1cnscli:latest
      options: --entrypoint ""

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Configure SentinelOne CNS CLI
        run: s1-cns-cli config --api-token $TOKEN --endpoint-url https://cns.na1.sentinelone.net
        env:
         TOKEN: ${{secrets.SENTINELONE_CNS_TOKEN}}

      - name: Configure git config
        run: git config --global --add safe.directory $PWD

      - name: Run Secret Detector
        id: iac-detector
        continue-on-error: true
        run:  s1-cns-cli --output-format SARIF --output-file iac.sarif scan secret -d $PWD --pull-request origin/$SRC $DEST --publish-result --repo-full-name $REPO_FULL_NAME  --repo-url $REPO_URL/$REPO_FULL_NAME
        env:
          DEST: ${{ github.event.pull_request.base.sha }}
          SRC: ${{ github.event.pull_request.head.ref }}
          REPO_FULL_NAME: ${{ github.repository }}
          REPO_URL: ${{ github.server_url }}

      - name: Publish Results as SARIF
        if: steps.iac-detector.outcome == 'failure'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: iac.sarif
      
      - name: Fail in case of Scan detecting issues
        if: steps.iac-detector.outcome == 'failure'
        run: exit 1

  vuln-scanning:
    runs-on: ubuntu-latest
    container:
      image: pingsafe/s1cnscli:latest
      options: --entrypoint ""

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Configure SentinelOne CNS CLI
        run: s1-cns-cli config --api-token $TOKEN --endpoint-url https://cns.na1.sentinelone.net
        env:
         TOKEN: ${{secrets.SENTINELONE_CNS_TOKEN}}

      - name: Configure git config
        run: git config --global --add safe.directory $PWD

      - name: Run Vulnerability Scanner
        id: vuln-detector
        continue-on-error: true
        run:  s1-cns-cli  --output-format SARIF --output-file vuln.sarif scan vuln -d $PWD

      - name: Publish Results as SARIF
        if: steps.vuln-detector.outcome == 'failure'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: vuln.sarif
      
      - name: Fail in case of Scan detecting issues
        if: steps.vuln-detector.outcome == 'failure'
        run: exit 1
